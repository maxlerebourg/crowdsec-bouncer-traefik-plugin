# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "generic/debian11"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
  config.vm.network "forwarded_port", guest: 8081, host: 8081
  config.vm.network "forwarded_port", guest: 80, host: 80


  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #

  config.vm.provider "libvirt" do |lv|
    graphics_type = "none"
    lv.cpus = 1
    # lv.vm.network :private_network, :ip => "10.20.30.40"
    # Customize the amount of memory on the VM:
    lv.memory = "2048"
  end

  # config.vm.provider "virtualbox" do |vb|
  #   vb.gui = false
  #   vb.cpus = 1
  #   # vb.vm.network :private_network, :ip => "10.20.30.40"
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "2048"
  # end
  config.vm.provision "file", source: "./files", destination: "/home/vagrant/vagrant_data"
  config.vm.provision "file", source: "./scripts", destination: "/home/vagrant/scripts"
#  config.vm.provision "file", source: "../../", destination: "/home/vagrant/plugin"

  config.vm.provision "shell", path: "scripts/install_traefik.sh"
  config.vm.provision "shell", path: "scripts/configure_traefik.sh"

  config.vm.provision "shell", path: "scripts/install_whoami.sh"

  config.vm.provision "shell", path: "scripts/install_crowdsec.sh"
  
  config.vm.provision "shell", path: "scripts/configure_crowdsec_certs.sh"


end
